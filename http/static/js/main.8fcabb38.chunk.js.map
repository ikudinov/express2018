{"version":3,"sources":["assets/logo.svg","constants/index.ts","redux/actions/ui.ts","redux/selectors/ui.ts","components/Main.tsx","components/Page1.tsx","components/Page2.tsx","components/App.tsx","redux/router.ts","redux/reducers/ui.ts","redux/reducers/index.ts","redux/sagas/ui.ts","redux/sagas/index.ts","index.tsx","redux/configureStore.ts"],"names":["COORDS","INCREMENT_COUNTER","DECREMENT_COUNTER","LOAD_WEATHER","LOAD_WEATHER_SUCCESS","incrementCounter","createAction","value","decrementCounter","loadWeather","lat","long","loadWeatherSuccess","weather","getWeather","createSelector","state","ui","timestamp","dayjs","unix","parseInt","dt","Main","dispatch","useDispatch","useSelector","counter","exampleCounter","className","src","logo","alt","to","onClick","name","format","temp","main","description","Page1","Page2","App","path","history","createBrowserHistory","reducers","payload","handleActions","rootReducer","combineReducers","router","connectRouter","exampleLoadWeatherSaga","rootUiSaga","url","window","top","postMessage","type","ref","handler","data","call","fetch","response","json","forecast","Math","ceil","parseFloat","put","console","error","message","all","takeEvery","rootSaga","fork","store","initialState","sagaMiddleware","createSagaMiddleware","routerMiddleware","createRouterMiddleware","createStore","composeWithDevTools","applyMiddleware","run","toPromise","catch","e","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fcabb38.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const COORDS = {\n  lat: 52.611331,\n  long: 39.574318,\n}\n","import { createAction } from 'redux-actions'\nimport { Weather } from '../../types'\n\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER'\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER'\nexport const LOAD_WEATHER = 'LOAD_WEATHER'\nexport const LOAD_WEATHER_SUCCESS = 'LOAD_WEATHER_SUCCESS'\n\nexport const incrementCounter = createAction(INCREMENT_COUNTER, ({ value }: { value: number }) => ({ value }))\nexport const decrementCounter = createAction(DECREMENT_COUNTER, ({ value }: { value: number }) => ({ value }))\nexport const loadWeather = createAction(LOAD_WEATHER, ({ lat, long }: { lat: number; long: number }) => ({ lat, long }))\nexport const loadWeatherSuccess = createAction(LOAD_WEATHER_SUCCESS, (weather: Weather) => weather)\n\nexport type incrementCounterActionType = ReturnType<typeof incrementCounter>\nexport type decrementCounterActionType = ReturnType<typeof decrementCounter>\nexport type loadWeatherActionType = ReturnType<typeof loadWeather>\nexport type loadWeatherSuccessActionType = ReturnType<typeof loadWeatherSuccess>\n","import dayjs from 'dayjs'\nimport { createSelector } from 'reselect'\nimport { ApplicationState, GetWeatherSelectorResult, Weather } from '../../types'\n\n// Generic types order: <State, Selector1, Selector2, ..., CurrentSelector>\nexport const getWeather = createSelector<ApplicationState, Weather, GetWeatherSelectorResult>(\n  [(state: ApplicationState) => state.ui.weather],\n  weather => {\n    return {\n      ...weather,\n      timestamp: dayjs.unix(parseInt(weather.dt || '0', 10)),\n    }\n  }\n)\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport logo from '../assets/logo.svg'\nimport { COORDS } from '../constants'\nimport { decrementCounter, incrementCounter, loadWeather } from '../redux/actions/ui'\nimport { getWeather } from '../redux/selectors/ui'\nimport '../styles/main.scss'\nimport { ApplicationState, GetWeatherSelectorResult } from '../types'\n\nexport default function Main() {\n  const dispatch = useDispatch()\n\n  const weather = useSelector<ApplicationState, GetWeatherSelectorResult>(getWeather)\n  const counter = useSelector<ApplicationState, number>(state => state.ui.exampleCounter)\n\n  const handleLoadWeather = () => dispatch(loadWeather({ lat: COORDS.lat, long: COORDS.long }))\n  const handleCounterPlus1 = () => dispatch(incrementCounter({ value: 1 }))\n  const handleCounterMinus1 = () => dispatch(decrementCounter({ value: 1 }))\n  const handleCounterPlus10 = () => dispatch(incrementCounter({ value: 10 }))\n  const handleCounterMinus10 = () => dispatch(decrementCounter({ value: 10 }))\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h3>\n          <Link to=\"/page1\">Page1</Link>\n          <Link to=\"/page2\">Page2</Link>\n        </h3>\n        <h3>\n          Counter example <code>{counter}</code>\n        </h3>\n        <div>\n          <button className=\"App-button\" onClick={handleCounterPlus1}>\n            +1\n          </button>\n          <button className=\"App-button\" onClick={handleCounterMinus1}>\n            -1\n          </button>\n          <button className=\"App-button\" onClick={handleCounterPlus10}>\n            +10\n          </button>\n          <button className=\"App-button\" onClick={handleCounterMinus10}>\n            -10\n          </button>\n        </div>\n        <h3>Fetch through redux-saga example</h3>\n        <button className=\"App-button\" onClick={handleLoadWeather}>\n          Load weather\n        </button>\n        {weather.dt && (\n          <code className=\"App-weather\">\n            <b>{weather.name}</b> [{weather.timestamp.format('DD.MM.YYYY')}]<br/>\n            {weather.temp}Â°C, {weather.main}, {weather.description}\n          </code>\n        )}\n      </header>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default function Page1() {\n  return (\n    <div>\n      <Link to=\"/\">Back</Link>\n      <h1>Page #1</h1>\n      Edit code <code>src/components/Page1.tsx</code>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport default function Page2() {\n  return (\n    <div>\n      <Link to=\"/\">Back</Link>\n      <h1>Page #2</h1>\n      Edit code <code>src/components/Page2.tsx</code>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Route, Switch } from \"react-router-dom\"\nimport Main from './Main'\nimport Page1 from \"./Page1\"\nimport Page2 from \"./Page2\"\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route path=\"/page1\">\n        <Page1 />\n      </Route>\n      <Route path=\"/page2\">\n        <Page2 />\n      </Route>\n      <Route path=\"/\">\n        <Main />\n      </Route>\n    </Switch>\n  )\n}\n","import { createBrowserHistory } from 'history'\n\n// Create history singleton\nconst history = createBrowserHistory()\n\nexport default history\n","import { handleActions } from 'redux-actions'\nimport { UiState } from '../../types'\nimport {\n  INCREMENT_COUNTER,\n  DECREMENT_COUNTER,\n  incrementCounterActionType,\n  decrementCounterActionType,\n  LOAD_WEATHER_SUCCESS,\n  loadWeatherSuccessActionType,\n} from '../actions/ui'\n\nconst initialState: UiState = {\n  exampleCounter: 10,\n  weather: {\n    main: null,\n    description: null,\n    dt: null,\n    name: null,\n    temp: null,\n  },\n}\n\nconst reducers = {\n  [INCREMENT_COUNTER]: (state: UiState, { payload: { value } }: incrementCounterActionType): UiState => {\n    return { ...state, exampleCounter: state.exampleCounter + value }\n  },\n  [DECREMENT_COUNTER]: (state: UiState, { payload: { value } }: decrementCounterActionType): UiState => {\n    return { ...state, exampleCounter: state.exampleCounter - value }\n  },\n  [LOAD_WEATHER_SUCCESS]: (state: UiState, { payload: weather }: loadWeatherSuccessActionType): UiState => {\n    return { ...state, weather: { ...weather } }\n  },\n}\n\nexport const ui = handleActions<UiState, any>(reducers, initialState)\n","import { connectRouter } from 'connected-react-router'\nimport { combineReducers } from 'redux'\nimport history from '../router'\nimport { ui } from './ui'\nimport { ApplicationState } from '../../types'\n\nconst rootReducer = combineReducers<ApplicationState>({\n  ui,\n  router: connectRouter(history),\n})\n\nexport default rootReducer\n","import { takeEvery, call, all, put } from 'redux-saga/effects'\nimport { Weather } from '../../types'\nimport { loadWeatherActionType, loadWeatherSuccess, LOAD_WEATHER } from '../actions/ui'\n\nexport function* exampleLoadWeatherSaga({ payload: { lat, long } }: loadWeatherActionType) {\n  try {\n    const url =\n      `https://api.openweathermap.org/data/2.5/` +\n      `weather?lat=${lat}&lon=${long}&APPID=84c375472712a1a880ffba2edbc74476`\n\n    window.top.postMessage({ type: 'smartapp', payload: { ref: 'aaaa', type: 'lalala', handler: 'botx', payload: { data: 'value' } } }, '*')\n\n    const response: Response = yield call(fetch, url)\n    const forecast = yield call(() => response.json())\n\n    const weather: Weather = {\n      main: forecast.weather[0].main,\n      description: forecast.weather[0].description,\n      dt: forecast.dt,\n      name: forecast.name,\n      temp: Math.ceil(parseFloat(forecast.main.temp) - 273.15),\n    }\n\n    yield put(loadWeatherSuccess(weather))\n  } catch (e) {\n    console.error(`exampleLoadWeatherSaga error: ${e.message}`)\n  }\n}\n\nexport function* rootUiSaga() {\n  yield all([takeEvery(LOAD_WEATHER, exampleLoadWeatherSaga)])\n}\n","import { all, fork } from 'redux-saga/effects'\nimport { rootUiSaga } from './ui'\n\nfunction* rootSaga() {\n  yield all([\n    fork(rootUiSaga),\n  ])\n}\n\nexport default rootSaga\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport './styles/index.scss'\nimport App from './components/App'\nimport { configureStore } from './redux/configureStore'\nimport history from './redux/router'\n\nconst store = configureStore()\n\nif (module.hot) module.hot.accept()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <App />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","import { applyMiddleware, createStore, Store, AnyAction } from 'redux'\nimport { routerMiddleware as createRouterMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\nimport history from './router'\nimport { ApplicationState } from '../types'\n\nexport function configureStore(initialState?: ApplicationState): Store<ApplicationState> {\n  const sagaMiddleware = createSagaMiddleware()\n  const routerMiddleware = createRouterMiddleware(history)\n\n  // create store\n  const store: Store<ApplicationState> = createStore<ApplicationState, AnyAction, any, any>(\n    rootReducer,\n    initialState, // TODO: assign default value\n    composeWithDevTools(applyMiddleware(sagaMiddleware, routerMiddleware))\n  )\n\n  sagaMiddleware\n    .run(rootSaga)\n    .toPromise()\n    .catch((e: ExceptionInformation) => console.error('Saga error', e))\n\n  return store\n}\n"],"sourceRoot":""}